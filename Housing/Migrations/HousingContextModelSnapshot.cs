// <auto-generated />
using System;
using Housing.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Housing.Migrations
{
    [DbContext(typeof(HousingContext))]
    partial class HousingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Housing.Models.AppUser", b =>
                {
                    b.Property<string>("Username")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PassHash");

                    b.Property<byte[]>("PassSalt");

                    b.Property<int>("Role");

                    b.HasKey("Username");

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            Username = "bb",
                            Email = "bob@barker.com",
                            FirstName = "bob",
                            LastName = "barker",
                            PassHash = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            PassSalt = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            Role = 1
                        },
                        new
                        {
                            Username = "rb",
                            Email = "rob@barker.com",
                            FirstName = "rob",
                            LastName = "barker",
                            PassHash = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            PassSalt = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            Role = 1
                        },
                        new
                        {
                            Username = "jennaj",
                            Email = "jenna@accomodationservices.soton.ac.uk",
                            FirstName = "jenna",
                            LastName = "jenkins",
                            PassHash = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            PassSalt = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            Role = 0
                        },
                        new
                        {
                            Username = "james1",
                            Email = "jj18g12@soton.ac.uk",
                            FirstName = "james",
                            LastName = "jones",
                            PassHash = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            PassSalt = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            Role = 2
                        },
                        new
                        {
                            Username = "lucy34",
                            Email = "ls1@solent.ac.uk",
                            FirstName = "lucy",
                            LastName = "smith",
                            PassHash = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            PassSalt = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            Role = 2
                        },
                        new
                        {
                            Username = "sarah-X",
                            Email = "sx9g17@soton.ac.uk",
                            FirstName = "sarah",
                            LastName = "xavier",
                            PassHash = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            PassSalt = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            Role = 2
                        },
                        new
                        {
                            Username = "alexthefantastic",
                            Email = "ad12g17@ecs.soton.ac.uk",
                            FirstName = "alexander",
                            LastName = "davies",
                            PassHash = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            PassSalt = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            Role = 2
                        },
                        new
                        {
                            Username = "jo92",
                            Email = "js4@solent.ac.uk",
                            FirstName = "jo",
                            LastName = "strong",
                            PassHash = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            PassSalt = new byte[] { 32, 32, 32, 32, 32, 32, 32, 32 },
                            Role = 2
                        });
                });

            modelBuilder.Entity("Housing.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path");

                    b.Property<int>("Position");

                    b.Property<int>("PropertyRef");

                    b.HasKey("ID");

                    b.HasIndex("PropertyRef");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Path = "Alma/30-1",
                            Position = 1,
                            PropertyRef = 101
                        },
                        new
                        {
                            ID = 2,
                            Path = "Alma/30-2",
                            Position = 2,
                            PropertyRef = 101
                        },
                        new
                        {
                            ID = 3,
                            Path = "Alma/30-3",
                            Position = 3,
                            PropertyRef = 101
                        },
                        new
                        {
                            ID = 4,
                            Path = "Portswood/22-1",
                            Position = 1,
                            PropertyRef = 102
                        },
                        new
                        {
                            ID = 5,
                            Path = "Portswood/22-2",
                            Position = 2,
                            PropertyRef = 102
                        });
                });

            modelBuilder.Entity("Housing.Models.Property", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<string>("AppUserRef");

                    b.Property<string>("City");

                    b.Property<string>("County");

                    b.Property<string>("Postcode");

                    b.Property<string>("PropertyDescription");

                    b.Property<int>("PropertyStatus");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("ID");

                    b.HasIndex("AppUserRef");

                    b.ToTable("Property");

                    b.HasData(
                        new
                        {
                            ID = 100,
                            AddressLine1 = "39 University Road",
                            AddressLine2 = "",
                            AppUserRef = "rb",
                            City = "Southampton",
                            County = "Hampshire",
                            Postcode = "SO146UP",
                            PropertyDescription = "2 Toilets!",
                            PropertyStatus = 2,
                            Timestamp = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 101,
                            AddressLine1 = "30 Alma Road",
                            AddressLine2 = "",
                            AppUserRef = "bb",
                            City = "Southampton",
                            County = "Hampshire",
                            Postcode = "SO146UP",
                            PropertyDescription = "Very nice brickwork",
                            PropertyStatus = 0,
                            Timestamp = new DateTime(2018, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 102,
                            AddressLine1 = "22 Portswood Road",
                            AddressLine2 = "Portswood",
                            AppUserRef = "bb",
                            City = "Southampton",
                            County = "Hampshire",
                            Postcode = "SO172ET",
                            PropertyDescription = "It has a roof",
                            PropertyStatus = 1,
                            Timestamp = new DateTime(2018, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 103,
                            AddressLine1 = "31 Alma Road",
                            AddressLine2 = "",
                            AppUserRef = "bb",
                            City = "Southampton",
                            County = "Hampshire",
                            Postcode = "SO146UP",
                            PropertyDescription = "Very very nice brickwork",
                            PropertyStatus = 0,
                            Timestamp = new DateTime(2018, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Housing.Models.Rejection", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("PropertyRef");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("ID");

                    b.HasIndex("PropertyRef");

                    b.ToTable("Rejection");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Please add at least one photo",
                            PropertyRef = 100,
                            Timestamp = new DateTime(2018, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Housing.Models.Image", b =>
                {
                    b.HasOne("Housing.Models.Property", "Property")
                        .WithMany("Images")
                        .HasForeignKey("PropertyRef")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Housing.Models.Property", b =>
                {
                    b.HasOne("Housing.Models.AppUser", "AppUser")
                        .WithMany("Properties")
                        .HasForeignKey("AppUserRef");
                });

            modelBuilder.Entity("Housing.Models.Rejection", b =>
                {
                    b.HasOne("Housing.Models.Property", "Property")
                        .WithMany("Rejections")
                        .HasForeignKey("PropertyRef")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
