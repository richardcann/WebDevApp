// <auto-generated />
using System;
using Housing.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Housing.Migrations
{
    [DbContext(typeof(HousingContext))]
    [Migration("20181113161916_CreateHousingDB")]
    partial class CreateHousingDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Housing.Models.AppUser", b =>
                {
                    b.Property<string>("Username");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PassHash");

                    b.Property<byte[]>("PassSalt");

                    b.Property<int>("Role");

                    b.HasKey("Username");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("Housing.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path");

                    b.Property<int>("Position");

                    b.Property<int>("PropertyRef");

                    b.HasKey("ID");

                    b.HasIndex("PropertyRef");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Housing.Models.Property", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<string>("City");

                    b.Property<string>("County");

                    b.Property<string>("LandlordUsername");

                    b.Property<string>("Postcode");

                    b.Property<string>("PropertyDescription");

                    b.Property<int>("PropertyStatus");

                    b.Property<DateTime>("Timestamp");

                    b.Property<string>("UsernameRef");

                    b.HasKey("ID");

                    b.HasIndex("LandlordUsername");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("Housing.Models.Rejection", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("PropertyRef");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("ID");

                    b.HasIndex("PropertyRef");

                    b.ToTable("Rejection");
                });

            modelBuilder.Entity("Housing.Models.Image", b =>
                {
                    b.HasOne("Housing.Models.Property", "Property")
                        .WithMany("Images")
                        .HasForeignKey("PropertyRef")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Housing.Models.Property", b =>
                {
                    b.HasOne("Housing.Models.AppUser", "Landlord")
                        .WithMany("Properties")
                        .HasForeignKey("LandlordUsername");
                });

            modelBuilder.Entity("Housing.Models.Rejection", b =>
                {
                    b.HasOne("Housing.Models.Property", "Property")
                        .WithMany("Rejections")
                        .HasForeignKey("PropertyRef")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
